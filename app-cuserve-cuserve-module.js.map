{"version":3,"sources":["webpack:///./src/app/cuserve/cuserve.component.html","webpack:///./src/app/cuserve/cuserve.component.scss","webpack:///./src/app/cuserve/cuserve.component.ts","webpack:///./src/app/cuserve/cuserve.module.ts","webpack:///./src/app/cuserve/cuserve.routing.ts","webpack:///./src/app/cuserve/footer/footer.component.html","webpack:///./src/app/cuserve/footer/footer.component.scss","webpack:///./src/app/cuserve/footer/footer.component.ts","webpack:///./src/app/cuserve/header/header.component.html","webpack:///./src/app/cuserve/header/header.component.scss","webpack:///./src/app/cuserve/header/header.component.ts","webpack:///./src/app/cuserve/home/home.component.html","webpack:///./src/app/cuserve/home/home.component.scss","webpack:///./src/app/cuserve/home/home.component.ts","webpack:///./src/app/cuserve/signup/signup.component.html","webpack:///./src/app/cuserve/signup/signup.component.scss","webpack:///./src/app/cuserve/signup/signup.component.ts"],"names":[],"mappings":"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","file":"app-cuserve-cuserve-module.js","sourcesContent":["module.exports = \"<page-header [userLogged]='isLogged' [billinglength]=\\\"billinglength\\\" [logo]=\\\"logo\\\"></page-header>\\n\\n<router-outlet></router-outlet>\\n<app-footer></app-footer>\\n\\n<app-signup [view]=\\\"userLogin\\\"></app-signup>\\n\\n<p-confirmDialog header=\\\"Confirmation\\\" icon=\\\"pi pi-exclamation-triangle\\\"></p-confirmDialog>\\n<p-toast class=\\\"toast\\\" [style]=\\\"{marginTop: '80px'}\\\"></p-toast>\"","module.exports = \".toast {\\n  z-index: 9; }\\n\"","import { Component, OnInit, OnChanges } from '@angular/core';\nimport { ShareService, AuthenticationService,HeaderService   } from './../providers/';\nimport { constants } from './../../app/constants';\nimport { Title, Meta } from '@angular/platform-browser';\n@Component({\n  selector: 'app-cuserve',\n  templateUrl: './cuserve.component.html',\n  styleUrls: ['./cuserve.component.scss']\n})\nexport class cuserveComponent implements OnInit  {\n\n  constructor(\n    private shareService: ShareService,\n    private titleService: Title,\n    private auth: AuthenticationService, \n    private headerService: HeaderService,\n    private meta: Meta) { }\n  userLogin: any;\n  logo: any;\n  isLogged: any;\n  locationDisplay: any;\n  locationData: any;\n  billinglength: any;\n  ngOnInit() {\n\n    this.auth.getloginState('customer').subscribe(res => {\n      this.isLogged = res;\n    });\n\n\n    this.shareService.getLoginModal().subscribe(res => {\n      this.userLogin = res;\n    });\n\n    this.headerService.billingcount$.subscribe(res => {  \n      console.log('header', res)    \n      this.billinglength = res;\n    });\n\n    // this.shareService.getData(constants.getsettings).subscribe(res => {\n    //   const appData = res['data'][0];\n    //   this.logo = constants.UploadedImage + appData.logo;\n    //   this.titleService.setTitle(appData.title);\n    //   this.meta.addTag({ name: 'description', content: appData.seo.title });\n    //   this.meta.addTag({ name: 'metatag', content: appData.seo.metatag });\n    //   this.meta.addTag({ name: 'keywords', content: appData.seo.keyword });\n    //   this.meta.addTag({ name: 'description', content: appData.seo.description });\n    //   const link = document.querySelector('link[rel*=\"icon\"]') || document.createElement('link');\n    //   link['type'] = 'image/x-icon';\n    //   link['rel'] = 'shortcut icon';\n    //   link['href'] = constants.UploadedImage + appData.favicon;\n    //   document.getElementsByTagName('head')[0].appendChild(link);\n    // });\n  }\n\n \n\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ShareModule } from '../share/share.module';\nimport { cuserveRouting} from './cuserve.routing';\nimport { cuserveComponent } from './cuserve.component';\nimport { HeaderComponent } from './header/header.component';\nimport { FooterComponent } from './footer/footer.component';\nimport { HomeComponent } from './home/home.component'; \nimport { SignupComponent } from './signup/signup.component';  \n\n\n@NgModule({\n  imports: [\n      CommonModule,\n      ShareModule,\n      cuserveRouting\n  ],\n  declarations: [\n    cuserveComponent,\n      HeaderComponent,\n      FooterComponent,\n      HomeComponent, \n      SignupComponent,\n  ]\n})\n\nexport class cuserveModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { UserAuthGuardService } from '../providers';\nimport { cuserveComponent } from './cuserve.component';\nimport { HomeComponent } from './home/home.component'; \nimport { PaymentsucessComponent } from '../share/paymentsucess/paymentsucess.component';\nimport { ResetpasswordComponent } from '../share/resetpassword/resetpassword.component';\nimport { EmailConfirmationComponent } from '../share/emailconfirmation.component';\n\n\nconst routes: Routes = [\n    {\n        path: '',  component: cuserveComponent,\n        children: [\n            { path: '',  component: HomeComponent },\n            { path: 'dashboard', canActivate: [UserAuthGuardService], loadChildren: './dashboard/dashboard.module#DashboardModule' },\n            { path: 'paymentsucess', component: PaymentsucessComponent },\n            { path: 'resetpass/:id', component: ResetpasswordComponent },\n            { path: 'verify/:id', component: EmailConfirmationComponent },\n            \n        ]\n    }\n];\n\n@NgModule({\n    exports: [RouterModule],\n    imports: [RouterModule.forChild(routes)]\n})\n\nexport class cuserveRouting { }\n","module.exports = \"<footer>\\n    <div class=\\\"col-md-12 col-sm-12 col-xs-12 col-lg-12 footer-base\\\">\\n        <p class=\\\"footer-copy\\\">Copyright © 2018 Cuserve</p>\\n        <p class=\\\"conditions-terms\\\"><a href=\\\"#\\\">Terms and Conditions & Privacy Policy</a></p>\\n    </div>\\n</footer>\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.scss']\n})\nexport class FooterComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<header>\\n    <div class=\\\"col-md-12 col-sm-12 col-lg-12 col-xs-12 head-base\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"head-inner col-md-12 col-sm-12 col-xs-12  col-lg-12\\\">\\n\\n                <nav *ngIf=\\\"!userLogged\\\" class=\\\"navbar navbar-default menu-base login-menu\\\">\\n                    <div class=\\\"container-fluid\\\">\\n                        <a class=\\\"\\\" routerLink=\\\"/\\\"><img src=\\\"../../../assets/images/logo.png\\\" alt=\\\"logo\\\"></a>\\n                    </div>\\n                </nav>\\n                <nav *ngIf=\\\"userLogged\\\" class=\\\"navbar navbar-default menu-base front-end\\\">\\n                    <div class=\\\"container-fluid\\\">\\n                        <!-- Brand and toggle get grouped for better mobile display -->\\n                        <div class=\\\"navbar-header\\\">\\n                            <button type=\\\"button\\\" class=\\\"navbar-toggle collapsed\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#bs-example-navbar-collapse-1\\\" aria-expanded=\\\"false\\\">\\n                          <span class=\\\"sr-only\\\">Toggle navigation</span>\\n                          <span class=\\\"icon-bar\\\"></span>\\n                          <span class=\\\"icon-bar\\\"></span>\\n                          <span class=\\\"icon-bar\\\"></span>\\n                        </button>\\n                            <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\"><img src=\\\"assets/images/logo.png\\\" alt=\\\"logo\\\"></a>\\n                        </div>\\n\\n                        <!-- Collect the nav links, forms, and other content for toggling -->\\n                        <div class=\\\"collapse navbar-collapse\\\" id=\\\"bs-example-navbar-collapse-1\\\">\\n\\n\\n                            <ul class=\\\"list-inline pull-right account-head-ul\\\">\\n                                <li> <a routerLink=\\\"/dashboard/createivr/{{userinfo._id}}\\\" class=\\\"themebtn\\\">CREATE IVR</a> </li>\\n                                <li> <a routerLink=\\\"/dashboard/\\\" class=\\\"themebtn\\\">DASHBOARD</a> </li>\\n\\n                                <li role=\\\"presentation\\\" class=\\\"dropdown\\\">\\n                                    <a class=\\\"dropdown-toggle\\\" data-toggle=\\\"dropdown\\\" href=\\\"#\\\" role=\\\"button\\\" aria-haspopup=\\\"true\\\" aria-expanded=\\\"false\\\">\\n                                        <span class=\\\"account-img\\\">\\n                                            <img *ngIf=\\\"userinfo.companylogo; else userinitial\\\" src=\\\"{{userinfo.companylogo}}\\\" alt=\\\"Accountcurserve\\\">\\n                                       <ng-template #userinitial>\\n                                           <label class=\\\"initial\\\">{{userinfo.name | slice:0:1}}  </label>\\n                                       </ng-template>\\n                                        </span>\\n                                        <span class=\\\"drop-icon\\\"></span>\\n                                        <!-- <span class=\\\"notification-icon\\\"></span> -->\\n                                    </a>\\n                                    <ul class=\\\"dropdown-menu\\\">\\n                                        <li><a routerLink=\\\"/dashboard/ivr/{{userinfo?._id}}\\\">My IVR</a></li>\\n                                        <li><a routerLink=\\\"/dashboard/account/{{userinfo?._id}}\\\">My Account</a></li>\\n                                        <li><a routerLink=\\\"/dashboard/billing/{{userinfo?._id}}\\\">Billing</a>\\n                                            <span *ngIf=\\\"billinglength\\\" class=\\\"notification-icon\\\"></span>\\n                                        </li>\\n                                        <li><a (click)=\\\"signout()\\\" class=\\\"logout-link\\\"><span class=\\\"logout-icon\\\"><img src=\\\"assets/images/logout-icon.png\\\" alt=\\\"logout\\\"></span>LOGOUT</a></li>\\n                                    </ul>\\n                                </li>\\n                            </ul>\\n\\n\\n\\n                        </div>\\n                        <!-- /.navbar-collapse -->\\n                    </div>\\n                    <!-- /.container-fluid -->\\n                </nav>\\n            </div>\\n        </div>\\n    </div>\\n</header>\"","module.exports = \".logout-link {\\n  cursor: pointer; }\\n\\nlabel.initial {\\n  border: 1px solid #ccc;\\n  width: 40px;\\n  height: 40px;\\n  margin: 3px 0 0 0;\\n  text-align: center;\\n  border-radius: 50%;\\n  vertical-align: middle;\\n  padding: 4px 0 0 0;\\n  font-size: 20px;\\n  color: #827f7f; }\\n\\n.account-img {\\n  width: 67px; }\\n\\n.account-img img {\\n  margin: 3px 0 0 0;\\n  width: 100%;\\n  height: auto;\\n  border-radius: 0; }\\n\"","import { Component, OnInit,OnChanges, Input, AfterViewInit, ChangeDetectionStrategy } from '@angular/core';\nimport { ShareService , HeaderService } from './../../providers';\nimport { AuthenticationService } from './../../providers/authentication.service';\nimport { Globals } from './../../globals';\nimport { Router } from '@angular/router';\nimport { constants } from '../../constants';\n\n\n@Component({\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  selector: 'page-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.scss']\n})\nexport class HeaderComponent implements OnInit, OnChanges {\n\n  private itemCount: Number = 0;\n  userinfo: any;\n  @Input() logo: any;\n  @Input() userLogged: any;\n  @Input() billinglength: any;\n  constructor(\n    private shareService: ShareService,\n    private auth: AuthenticationService,\n    private headerService: HeaderService,\n    private globals: Globals) {\n\n  }\n\n  ngOnInit() { \n\n    // this.shareService.getData(constants.getcustomer + this.userinfo._id).subscribe(res => {\n    //   console.log(this.userinfo) \n    //   this.userdetail = res['data'][0]; \n    // });\n  \n  }\n\n  ngOnChanges(changes) { \n    this.userinfo = this.auth.getUser('customer');\n   if(this.userinfo){\n     this.shareService.getData(constants.getnewbills + this.userinfo._id).subscribe(res => { \n       this.headerService._billingcount.next(res['bills'].length);\n       \n     })\n   }\n  }\n  signin() {\n    this.shareService.setLoginModal(true);\n  }\n\n  signout() {\n    this.auth.customerlogout();\n  }\n\n\n}\n","module.exports = \"<section>\\n    <div class=\\\"col-md-12 login-base\\\">\\n        <div class=\\\"container\\\">\\n            <div class=\\\"col-md-12 login-inner\\\">\\n                <div class=\\\"col-md-7 login-text\\\">\\n                    <h2>Make your Own IVR in CuServe</h2>\\n                    <h3>Build conversations anywhere. Make, receive, and monitor calls around the world.</h3>\\n                    <ul *ngIf=\\\"!isLogged\\\" class=\\\"list-inline\\\">\\n                        <li><a class=\\\"registerbtn\\\" (click)=\\\"signindisplay('signup')\\\">REGISTER</a></li>\\n                        <li><span>or</span></li>\\n                        <li><a (click)=\\\"signindisplay('signin')\\\" class=\\\"themebtn\\\">LOGIN</a></li>\\n                    </ul>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</section>\"","module.exports = \".lr_header_navigation_main_wrapper.bannersection {\\n  position: absolute; }\\n\\n:host .lr_header_navigation_main_wrapper {\\n  background: none; }\\n\\n:host-context(.gr__localhost) .lr_header_navigation_main_wrapper {\\n  background: none; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ShareService } from './../../providers/share.service';\nimport { constants } from './../../constants';\nimport { AuthenticationService } from './../../providers/authentication.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n  bannerImage: any;\n  imagepath: any;\n  isLogged: any;\n  constructor(private shareService: ShareService,   private auth: AuthenticationService,) { }\n\n  ngOnInit() {\n    //     // localStorage.setItem('previousurl' , e[0].urlAfterRedirects);\n\n    // this.imagepath  = constants.carImage;\n    // this.shareService.getData(constants.getbanner).subscribe(res => { \n    //   this.bannerImage = res['data'];\n    // });\n\n    this.auth.getloginState('customer').subscribe(res => { \n      console.log(res)\n      this.isLogged = res;\n    });\n\n    // this.auth.$userdetail.subscribe(res => {\n    //   console.log(res);\n    //   this.isLogged = res;\n    // })\n \n \n  }\n\n\n  signindisplay(view) { \n    this.shareService.setLoginModal(view);\n  }\n\n}\n","module.exports = \"<div *ngIf=\\\"view\\\" class=\\\"signUpOutter\\\">\\n    <span (click)=\\\"close()\\\" class=\\\"iconclose\\\">x</span>\\n    <div *ngIf=\\\"view === 'signin'\\\" class=\\\"login-modal modal fade \\\" id=\\\"myModal\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content col-md-12 nopadd\\\">\\n                <div class=\\\"modal-body col-md-12 nopadd\\\">\\n                    <form (ngSubmit)=\\\"onLogin(loginForm);\\\" #loginForm=\\\"ngForm\\\">\\n                        <h4 class=\\\"login-title\\\">Login</h4>\\n                        <div class=\\\"col-md-12 login-modal-base\\\">\\n                            <div class=\\\"col-md-12  input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12input-container \\\">\\n                                    <input type=\\\"email\\\" email required class=\\\"input-control login-email\\\" [(ngModel)]=\\\"userdetail.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email Address\\\">\\n                                </div>\\n                                <div *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                                    <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12  input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12input-container \\\">\\n                                    <input type=\\\"password\\\" required class=\\\"input-control login-password\\\" [(ngModel)]=\\\"userdetail.password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\n                                </div>\\n                                <div *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12  input-container-base \\\">\\n                                <div class=\\\"custom_check\\\">\\n                                    <label class=\\\"control control--checkbox\\\"> \\n                                  <input type=\\\"checkbox\\\" [(ngModel)]=\\\"userdetail.remember\\\" #remember=\\\"ngModel\\\" name=\\\"remember\\\" >Remember me\\n                                  <div class=\\\"control__indicator\\\"></div>\\n                                   </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12  input-container-base \\\">\\n                                <div class=\\\"col-md-12  login-btn-container nopadd\\\">\\n                                    <button [disabled]=\\\"!loginForm.valid\\\" (click)=\\\"registerstep2 = true\\\" type=\\\"submit\\\" [class.disabled]=\\\"!loginForm.valid\\\" class=\\\"themebtn\\\">LOGIN</button>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12  input-container-base  text-center\\\">\\n                                <div class=\\\"col-md-12  forgot-container nopadd\\\">\\n                                    <a class=\\\"cursor\\\" (click)=\\\"view =  'forgetpassword'\\\">Forgot Password?</a>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12  input-container-base \\\">\\n                                <div class=\\\"col-md-12  login-footer \\\">\\n                                    <P>Don’t have an account?</P>\\n                                    <a class=\\\"cursor\\\" (click)=\\\"view =  'signup'\\\" class=\\\"themebtn1\\\">Create one</a>\\n                                </div>\\n                            </div>\\n\\n                        </div>\\n                    </form>\\n                    <!-- <p class=\\\"errormessage\\\">{{errormessage}}</p> -->\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div *ngIf=\\\"view === 'signup'\\\" class=\\\"login-modal modal fade \\\" id=\\\"register\\\" tabindex=\\\"-1\\\" role=\\\"dialog\\\" aria-labelledby=\\\"myModalLabel\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content col-md-12 nopadd\\\">\\n                <form (ngSubmit)=\\\"registerForm.form.valid && onRegister(registerForm)\\\" #registerForm=\\\"ngForm\\\" novalidate>\\n                    <div class=\\\"modal-body col-md-12 nopadd\\\">\\n\\n                        <div *ngIf=\\\"!registerstep2\\\" class=\\\"col-md-12 login-modal-base\\\">\\n                            <h4 class=\\\"login-title\\\">Register with your Email</h4>\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <input type=\\\"text\\\" required class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.name\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\">\\n\\n                                </div>\\n                                <div *ngIf=\\\"name.touched && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"name.errors.required\\\">Name is required</div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <input type=\\\"email\\\" (focusout)=\\\"checkemailvalidation(registerdetail.email , email.valid )\\\" email required class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email Address\\\">\\n                                </div>\\n                                <div *ngIf=\\\"emailvalidate\\\" class=\\\"invalid-feedback\\\">\\n                                    <div>This Email ID is already exists </div>\\n                                </div>\\n                                <div *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                                    <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <input type=\\\"password\\\" required class=\\\"input-control\\\" minlength=\\\"6\\\" [(ngModel)]=\\\"registerdetail.password\\\" #password=\\\"ngModel\\\" name=\\\"password\\\" id=\\\"password\\\" placeholder=\\\"Password\\\">\\n                                </div>\\n                                <div *ngIf=\\\"password.touched && password.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"password.errors.required\\\">Password is required</div>\\n                                    <div *ngIf=\\\"password.errors.minlength\\\">Password must be at least 6 characters</div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <input type=\\\"text\\\" pattern=\\\"^[0-9-+()]*$\\\" required class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.phone\\\" #phone=\\\"ngModel\\\" name=\\\"phone\\\" id=\\\"phone\\\" placeholder=\\\"Phone Number\\\">\\n                                </div>\\n                                <div *ngIf=\\\"phone.touched && phone.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"phone.errors.required\\\">Phone Number is required</div>\\n                                    <div *ngIf=\\\"phone.errors.pattern\\\">Phone Number must be valid</div>\\n\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 input-container-base\\\">\\n                                <div class=\\\"custom_check agree-terms-login\\\">\\n                                    <label class=\\\"control control--checkbox\\\">\\n                                 <input type=\\\"checkbox\\\" required [(ngModel)]=\\\"registerdetail.accept\\\"  #accept=\\\"ngModel\\\" name=\\\"accept\\\" id=\\\"accept\\\"  class=\\\" \\\">\\n                                  By signing up, I agree to CuServe’s <a href=\\\"#\\\">Terms and Conditions, and Privacy Policy.</a> \\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t\\t<div class=\\\"control__indicator\\\"></div>\\n                                 </label>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 input-container-base\\\">\\n                                <div class=\\\"col-md-12 login-btn-container nopadd\\\">\\n                                    <button [disabled]=\\\"!registerForm.valid && registerdetail.accept && emailvalidate\\\" (click)=\\\"registerstep2 = true\\\" type=\\\"button\\\" [class.disabled]=\\\"!registerForm.valid\\\" class=\\\"themebtn\\\">REGISTER</button>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 input-container-base \\\">\\n                                <div class=\\\"col-md-12 login-footer \\\">\\n                                    <P>Already have an account?</P>\\n                                    <a (click)=\\\"view = 'signin'\\\" class=\\\"themebtn1\\\">LOGIN</a>\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n\\n                        <div *ngIf=\\\"registerstep2\\\" class=\\\"col-md-12 login-modal-base\\\">\\n                            <h4 class=\\\"login-title\\\">\\n                                <i class=\\\"mdi mdi-arrow-left\\\" (click)=\\\"registerstep2 = false\\\" style=\\\"  float: left; margin: 0 0 0 10px; \\\"></i> Register: Final Step </h4>\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <input type=\\\"text\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.companyname\\\" #companyname=\\\"ngModel\\\" name=\\\"companyname\\\" id=\\\"companyname\\\" placeholder=\\\"Company Name\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <input type=\\\"email\\\" email class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.companyemail\\\" #companyemail=\\\"ngModel\\\" name=\\\"companyemail\\\" id=\\\"companyemail\\\" placeholder=\\\"Company Email Address\\\">\\n                                </div>\\n\\n                                <div *ngIf=\\\"companyemail.touched && companyemail.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"companyemail.errors.email\\\">Email must be a valid email address</div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <input type=\\\"text\\\" pattern=\\\"^[0-9-+()]*$\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.companyphone\\\" #companyphone=\\\"ngModel\\\" name=\\\"companyphone\\\" id=\\\"companyphone\\\" placeholder=\\\"phone Number\\\">\\n                                </div>\\n                                <div *ngIf=\\\"companyphone.touched && companyphone.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"companyphone.errors.pattern\\\">Phone Number must be valid</div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <p-dropdown class=\\\"input-control\\\" required [options]=\\\"categorylist\\\" [(ngModel)]=\\\"registerdetail.category\\\" #category=\\\"ngModel\\\" name=\\\"category\\\" id=\\\"category\\\"></p-dropdown>\\n\\n                                </div>\\n                                <div *ngIf=\\\"companyphone.touched && companyphone.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"companyphone.errors.required\\\">Category must be valid</div>\\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <label class=\\\"formtit\\\"> Company Logo</label>\\n                                    <p-fileUpload name=\\\"companylogo[]\\\" [url]=\\\"companylogoapi\\\" (onUpload)=\\\"onUpload($event , 'companylogo')\\\" mode=\\\"basic\\\" auto=\\\"auto\\\" accept=\\\"image/*\\\"></p-fileUpload>\\n\\n                                    <input type=\\\"text\\\" class=\\\"hide\\\" hidden [(ngModel)]=\\\"registerdetail.companylogo\\\" #companylogo=\\\"ngModel\\\" name=\\\"companylogo\\\" id=\\\"companylogo\\\" required>\\n                                    <div *ngIf=\\\"registerdetail.companylogo\\\" class=\\\"buttonholder\\\">\\n                                        <button type=\\\"button\\\" (click)=\\\"viewImage(registerdetail.companylogo)\\\" class=\\\"btn\\\">View</button>\\n                                        <button type=\\\"button\\\" (click)=\\\"removeImage(registerdetail.companylogo, 'companylogo' )\\\" class=\\\"btn\\\">Remove</button>\\n                                    </div>\\n                                    <div *ngIf=\\\"previewImage\\\" class=\\\"imagePreview\\\">\\n                                        <h4>Preview</h4>\\n                                        <img [src]=\\\"previewImage\\\">\\n                                    </div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12  input-container \\\">\\n                                    <input type=\\\"text\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.companyaddress1\\\" #companyaddress1=\\\"ngModel\\\" name=\\\"companyaddress1\\\" id=\\\"companyaddress1\\\" placeholder=\\\"Address Line 1\\\">\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-md-12  input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-6 input-container \\\">\\n                                    <input type=\\\"text\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.companyaddress2\\\" #companyaddress2=\\\"ngModel\\\" name=\\\"companyaddress2\\\" id=\\\"companyaddress2\\\" placeholder=\\\"Address Line 2 (Optional)\\\">\\n\\n                                </div>\\n                                <div class=\\\"col-md-6 input-container\\\">\\n                                    <input type=\\\"text\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.companycity\\\" #companycity=\\\"ngModel\\\" name=\\\"companycity\\\" id=\\\"companycity\\\" placeholder=\\\"City\\\">\\n\\n                                </div>\\n                            </div>\\n\\n\\n                            <div class=\\\"col-md-12  input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-6 input-container \\\">\\n                                    <input type=\\\"text\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.companystate\\\" #companystate=\\\"ngModel\\\" name=\\\"companystate\\\" id=\\\"companystate\\\" placeholder=\\\"State/province\\\">\\n                                </div>\\n                                <div class=\\\"col-md-6 input-container\\\">\\n                                    <input type=\\\"text\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"registerdetail.companycountry\\\" #companycountry=\\\"ngModel\\\" name=\\\"companycountry\\\" id=\\\"companycountry\\\" placeholder=\\\"Country\\\">\\n                                </div>\\n                            </div>\\n\\n\\n\\n\\n\\n                            <div class=\\\"col-md-12 input-container-base\\\">\\n                                <div class=\\\"col-md-12 login-btn-container nopadd\\\">\\n                                    <button [disabled]=\\\"!registerForm.valid && registerdetail.accept\\\" type=\\\"submit\\\" class=\\\"themebtn\\\">REGISTER</button>\\n                                </div>\\n                            </div>\\n\\n\\n                        </div>\\n                    </div>\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"view === 'forgetpassword'\\\" class=\\\"login-modal modal fade \\\" id=\\\"myModal\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content col-md-12 nopadd\\\">\\n                <div class=\\\"modal-body col-md-12 nopadd\\\">\\n                    <form (ngSubmit)=\\\"onforgetpass(ForgetpassForm);\\\" #ForgetpassForm=\\\"ngForm\\\">\\n                        <h4 class=\\\"login-title\\\">RESET PASSWORD</h4>\\n                        <div class=\\\"col-md-12 login-modal-base\\\">\\n                            <div class=\\\"col-md-12  input-container-base nopadd\\\">\\n                                <div class=\\\"col-md-12input-container \\\">\\n                                    <input type=\\\"email\\\" email required class=\\\"input-control login-email\\\" [(ngModel)]=\\\"resetdetail.email\\\" #email=\\\"ngModel\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"Email Address\\\">\\n                                </div>\\n                                <div class=\\\"invalid-feedback\\\">{{errormessage}}</div>\\n\\n                                <div *ngIf=\\\"email.touched && email.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                    <div *ngIf=\\\"email.errors.required\\\">Email is required</div>\\n                                    <div *ngIf=\\\"email.errors.email\\\">Email must be a valid email address</div>\\n                                </div>\\n                            </div>\\n\\n                            <div class=\\\"col-md-12  input-container-base \\\">\\n                                <div class=\\\"col-md-12  login-btn-container nopadd\\\">\\n                                    <button [disabled]=\\\"!ForgetpassForm.valid\\\" type=\\\"submit\\\" [class.disabled]=\\\"!ForgetpassForm.valid\\\" class=\\\"themebtn\\\">SUBMIT</button>\\n                                </div>\\n                            </div>\\n\\n\\n\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n\\n    <div *ngIf=\\\"view === 'emailverification'\\\" class=\\\"login-modal modal fade \\\" id=\\\"myModal\\\">\\n        <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n            <div class=\\\"modal-content col-md-12 nopadd\\\">\\n                <div class=\\\"modal-body col-md-12 nopadd\\\">\\n                    <p class=\\\"verificationtext\\\">\\n                        Verification link has been sent to your email account. Please verify to login\\n                    </p>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".modal {\\n  display: block;\\n  opacity: 1;\\n  z-index: 3; }\\n\\n.disabled {\\n  pointer-events: none;\\n  opacity: .5; }\\n\\n.formtit {\\n  float: left;\\n  width: 100%;\\n  font-weight: normal; }\\n\\n.iconclose {\\n  cursor: pointer;\\n  position: fixed;\\n  right: 40px;\\n  top: 10px;\\n  z-index: 99;\\n  color: #fff;\\n  font-size: 30px; }\\n\\n.verificationtext {\\n  float: left;\\n  width: 100%;\\n  padding: 40px;\\n  font-size: 19px; }\\n\\n.imagePreview {\\n  float: left;\\n  width: 100%; }\\n\"","import { Component, OnInit, Input, ElementRef, Renderer, OnChanges } from '@angular/core';\nimport { ShareService } from './../../providers/share.service';\nimport { constants } from '../../constants';\nimport { Router } from '@angular/router';\nimport { AuthenticationService } from '../../providers';\nimport { MessageService } from 'primeng/api';\n\n@Component({\n  selector: 'app-signup',\n  templateUrl: './signup.component.html',\n  styleUrls: ['./signup.component.scss']\n})\nexport class SignupComponent implements OnInit {\n  forgetForm: boolean;\n  @Input() view: any;\n  loginForm: any;\n  previewImage: any;\n  registerForm: any;\n  userdetail: any = {};\n  registerdetail: any = {};\n  resetdetail: any = {};\n  registerstep2: boolean =  false;\n  errormessage: string;\n  emailvalidate: string;\n  ForgetpassForm: any;\n  categorylist: any;\n  companylogoapi: string;\n  uploadedFiles: any[] = [];\n  filetoremove: any = [];\n  constructor(\n    private shareService: ShareService,\n    private auth: AuthenticationService,\n    private messageService: MessageService,\n    private router: Router, elementRef: ElementRef, renderer: Renderer) {\n    // renderer.listen(elementRef.nativeElement, 'click', (event) => {\n    //   event.srcElement.classList.contains('modal') ? this.shareService.setLoginModal(false) : null\n    // });\n    this.categorylist = [\n      { label: 'Select Category', value: null },\n      { label: 'Banking', value: 'banking' },\n      { label: 'Telecom', value: 'telecom' },\n      { label: 'Finance', value: 'finance' },\n      { label: 'other', value: 'other' }\n    ];\n  }\n\n  ngOnInit() {\n    this.forgetForm = false;\n \n    this.companylogoapi = constants.uploadcompanylogo;\n   this.settinglogin()  \n    \n  }\n\n  settinglogin(){\n    if(localStorage.getItem('cuserveUserValue') ){\n      let storeddata = JSON.parse( localStorage.getItem('cuserveUserValue'));\n      this.userdetail = storeddata;\n    } \n  }\n\n  onRegister(val) {\n    console.log(val)\n    this.shareService.postData(constants.userRegister, this.registerdetail).subscribe((res) => {\n\n      this.view = 'emailverification';\n      // this.messageService.add({ severity: 'success', summary: 'Sucess', detail: 'You have Sucessfull Register. Please Login using Email and password' });\n      this.removeUnusedFiles()\n    }, (err) => {\n      this.errormessage = err.error.message;\n      console.error(err, this.errormessage);\n    });\n  }\n\n\n  onLogin() {\n    console.log(this.userdetail)\n\n    if (this.userdetail.remember) {\n      console.log(this.userdetail.remember)\n     localStorage.setItem('cuserveUserValue', JSON.stringify(this.userdetail));\n  } else {\n    localStorage.removeItem('cuserveUserValue');\n  }\n\n    this.shareService.postData(constants.userLogin, this.userdetail).subscribe(res => {\n      this.auth.saveToken(res.user, res.token);\n      this.messageService.add({ severity: 'success', summary: 'Sucess', detail: 'You have Sucessfull Logged in' });\n      this.close();\n      this.router.navigateByUrl('/dashboard');\n\n    }, (err) => {\n      this.errormessage = err.error.message;\n      console.error(err, this.errormessage);\n    });\n\n\n  }\n\n  onforgetpass() {\n    this.shareService.postData(constants.getcustomer + 'forgetpass', this.resetdetail).subscribe(res => {\n      console.log(res)\n      if(res['success']){\n        this.messageService.add({ severity: 'success', summary: 'Sucess', detail: res['message'] });\n        this.close()\n      } else {\n      this.errormessage = res['message'] ;\n\n      }\n     \n    }, (err) => {\n      this.errormessage = err.error.message;\n      console.error(err, this.errormessage);\n    });\n\n\n  }\n\n  // onUpload(ev){\n  //   console.log(ev)\n  //   for(let file of ev.files) {\n  //     this.uploadedFiles.push(file);\n  // }\n  // }\n\n  onUpload(event, fieldname) {\n    const response = JSON.parse(event.xhr.response);\n    if (this.registerdetail[fieldname] === '' || this.registerdetail[fieldname] === undefined) {\n      this.registerdetail[fieldname] = constants.companyImagepath + response.file[0].filename;\n    } else {\n      this.filetoremove = [...this.filetoremove, constants.companyImagepath + this.registerdetail[fieldname]];\n      this.registerdetail[fieldname] = constants.companyImagepath + response.file[0].filename;\n    }\n  }\n\n  checkemailvalidation(value, validation) {\n    console.log(value, validation);\n    if (validation) {\n      this.shareService.postData(constants.getcustomer + 'findcustomerexists', { email: value }).subscribe(res => {\n        // console.log();\n        this.emailvalidate = res['exists'];\n      })\n    }\n\n\n  }\n\n  viewImage(image) {\n    console.log(image)\n    this.previewImage = image;\n  }\n\n  removeImage(id, fieldname) {\n    this.registerdetail[fieldname] = '';\n    this.previewImage = null;\n\n    this.filetoremove = [...this.filetoremove, constants.companyImagepath + id];\n  }\n\n  removeUnusedFiles() {\n    this.shareService.postData(constants.deletefile, this.filetoremove).subscribe(result => {\n      console.log(result['message']);\n      this.filetoremove = [];\n    });\n  }\n\n\n  close() {\n    this.resetdetail = {};\n    this.registerdetail = {};\n    this.userdetail = {};\n    this.shareService.setLoginModal(false);\n    this.registerstep2 = false;\n    this.settinglogin();\n  \n  }\n}\n"],"sourceRoot":""}