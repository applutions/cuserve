{"version":3,"sources":["webpack:///./src/app/admin/android/addcompany/addcompany.component.html","webpack:///./src/app/admin/android/addcompany/addcompany.component.scss","webpack:///./src/app/admin/android/addcompany/addcompany.component.ts","webpack:///./src/app/admin/android/companylist.module.ts","webpack:///./src/app/admin/android/companylist.routing.ts","webpack:///./src/app/admin/android/companylist/companylist.component.html","webpack:///./src/app/admin/android/companylist/companylist.component.scss","webpack:///./src/app/admin/android/companylist/companylist.component.ts"],"names":[],"mappings":"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","file":"android-companylist-module.js","sourcesContent":["module.exports = \"<div class=\\\"breadcrumb-base col-md-12 col-sm-12 col-lg-12 col-xs-12\\\">\\n    <ul class=\\\"breadcrumb\\\">\\n        <li><a routerLink=\\\"/admin/android\\\">Android List</a></li>\\n        <li><a>Add Company  </a></li>\\n    </ul>\\n</div>\\n<div class=\\\"tab-content\\\">\\n    <div role=\\\"tabpanel\\\" class=\\\"tab-pane active\\\" id=\\\"user\\\">\\n        <div class=\\\"col-md-12  myaccount-base\\\">\\n            <h2 class=\\\"main-title\\\"> Add Company</h2>\\n            <div class=\\\"col-md-12  myaccount-inner\\\">\\n\\n                <div class=\\\"tab-content\\\">\\n                    <form (ngSubmit)=\\\"onSubmitForm(registerForm);\\\" #registerForm=\\\"ngForm\\\">\\n                        <div class=\\\"col-md-12  account-section-input\\\">\\n                            <div class=\\\"col-md-12    account-section-input-inner\\\">\\n                                <h3 class=\\\"sub-title\\\">Company Details</h3>\\n                                <div class=\\\"col-md-12  input-container-base nopadd\\\">\\n                                    <div class=\\\"col-md-6 input-container \\\">\\n                                        <input type=\\\"text\\\" required class=\\\"input-control\\\" [(ngModel)]=\\\"register.name\\\" #name=\\\"ngModel\\\" name=\\\"name\\\" id=\\\"name\\\" placeholder=\\\"Name\\\">\\n                                        <div *ngIf=\\\"name.touched && name.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"name.errors.required\\\">Name is required</div>\\n                                        </div>\\n                                    </div>\\n                                    <div class=\\\"col-md-6 input-container\\\">\\n                                        <input type=\\\"text\\\" required class=\\\"input-control\\\" [(ngModel)]=\\\"register.ivrName\\\" #ivrName=\\\"ngModel\\\" name=\\\"ivrName\\\" id=\\\"ivrName\\\" placeholder=\\\"IVR Name\\\">\\n                                        <div *ngIf=\\\"ivrName.touched && ivrName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"ivrName.errors.required\\\">IVR Name is required</div>\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n                                <div class=\\\"col-md-12  input-container-base nopadd\\\">\\n                                    <div class=\\\"col-md-6 input-container \\\">\\n                                        <input type=\\\"text\\\" required class=\\\"input-control\\\" [(ngModel)]=\\\"register.baseKeyCode\\\" #baseKeyCode=\\\"ngModel\\\" name=\\\"baseKeyCode\\\" id=\\\"baseKeyCode\\\" placeholder=\\\"Basekey code\\\">\\n                                        <div *ngIf=\\\"baseKeyCode.touched && baseKeyCode.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"baseKeyCode.errors.required\\\">BaseKey code is required</div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"col-md-6 input-container\\\">\\n                                        <input required type=\\\"text\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"register.logoUrl\\\" #logoUrl=\\\"ngModel\\\" name=\\\"logoUrl\\\" id=\\\"logoUrl\\\" placeholder=\\\"Logo Url\\\">\\n                                        <div *ngIf=\\\"logoUrl.touched && logoUrl.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"logoUrl.errors.required\\\">Logo URL is required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n\\n\\n                                <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                    <div class=\\\"col-md-6  input-container \\\">\\n                                        <p-dropdown required class=\\\"input-control\\\" required [options]=\\\"categorylist\\\" [(ngModel)]=\\\"register.category\\\" #category=\\\"ngModel\\\" name=\\\"category\\\" id=\\\"category\\\"></p-dropdown>\\n                                        <div *ngIf=\\\"category.touched && category.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"category.errors.required\\\">Category is required</div>\\n                                        </div>\\n                                    </div>\\n\\n\\n                                    <div class=\\\"col-md-6  input-container \\\">\\n                                        <input type=\\\"text\\\" required class=\\\"input-control\\\" [(ngModel)]=\\\"register.displayName\\\" #displayName=\\\"ngModel\\\" name=\\\"displayName\\\" id=\\\"displayName\\\" placeholder=\\\"Display Name\\\">\\n\\n                                        <div *ngIf=\\\"displayName.touched && displayName.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"displayName.errors.required\\\">Display Name is required</div>\\n                                        </div>\\n                                    </div>\\n\\n                                </div>\\n\\n\\n                                <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                    <div class=\\\"col-md-6 input-container \\\">\\n                                        <input type=\\\"text\\\" required class=\\\"input-control\\\" [(ngModel)]=\\\"register.customerCare\\\" #customerCare=\\\"ngModel\\\" name=\\\"customerCare\\\" id=\\\"customerCare\\\" placeholder=\\\"Customer Care\\\">\\n                                        <div *ngIf=\\\"customerCare.touched && customerCare.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"customerCare.errors.required\\\">Customer Care is required</div>\\n                                        </div>\\n                                    </div>\\n\\n                                    <div class=\\\"col-md-6 input-container \\\">\\n                                        <input type=\\\"text\\\" class=\\\"input-control\\\" [(ngModel)]=\\\"register.tagline\\\" #tagline=\\\"ngModel\\\" name=\\\"customerCare\\\" id=\\\"Tagline\\\" placeholder=\\\"Tagline (optional)\\\">\\n\\n                                    </div>\\n\\n                                </div>\\n\\n                                <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n\\n\\n\\n                                    <div class=\\\"col-md-6  input-container \\\">\\n                                        <label class=\\\"formtit\\\">Upload CSV</label>\\n                                        <p-fileUpload accept=\\\".csv\\\" name=\\\"csv[]\\\" [url]=\\\"uploadcsv\\\" (onUpload)=\\\"onUpload($event , 'csv')\\\" (onSelect)=\\\"select($event)\\\" mode=\\\"basic\\\" auto=\\\"auto\\\"></p-fileUpload>\\n                                        <input type=\\\"text\\\" class=\\\"hide\\\" hidden [(ngModel)]=\\\"register.cuservejson\\\" #cuservejson=\\\"ngModel\\\" name=\\\"cuservejson\\\" id=\\\"cuservejson\\\" required>\\n                                        <label style=\\\"\\n                                        margin: 7px 0 0 10px;\\n                                    \\\" *ngIf=\\\"uploadedfilename\\\">{{uploadedfilename}}</label>\\n                                        <div *ngIf=\\\"cuservejson.touched && cuservejson.invalid\\\" class=\\\"invalid-feedback\\\">\\n                                            <div *ngIf=\\\"cuservejson.errors.required\\\">CSV is required</div>\\n                                        </div>\\n                                    </div>\\n                                </div>\\n\\n                                <!-- \\n                                <div class=\\\"col-md-12 input-container-base nopadd\\\">\\n                                    <div class=\\\"col-md-12  input-container \\\">\\n                                        <label class=\\\"formtit\\\"> Company Logo</label>\\n                                        <p-fileUpload name=\\\"companylogo[]\\\" [url]=\\\"companylogoapi\\\" (onUpload)=\\\"onUpload($event , 'companylogo')\\\" mode=\\\"basic\\\" auto=\\\"auto\\\" accept=\\\"image/*\\\"></p-fileUpload>\\n\\n                                        <input type=\\\"text\\\" class=\\\"hide\\\" hidden [(ngModel)]=\\\"register.companylogo\\\" #companylogo=\\\"ngModel\\\" name=\\\"companylogo\\\" id=\\\"companylogo\\\" required>\\n                                        <div *ngIf=\\\"register.companylogo\\\" class=\\\"buttonholder\\\">\\n                                            <button type=\\\"button\\\" (click)=\\\"viewImage(register.companylogo)\\\" class=\\\"btn\\\">View</button>\\n                                            <button type=\\\"button\\\" (click)=\\\"removeImage(register.companylogo, 'companylogo' )\\\" class=\\\"btn\\\">Remove</button>\\n                                        </div>\\n                                        <div *ngIf=\\\"previewImage\\\" class=\\\"imagePreview\\\">\\n                                            <h4>Preview</h4>\\n                                            <img [src]=\\\"previewImage\\\">\\n                                        </div>\\n                                    </div>\\n                                </div> -->\\n\\n\\n\\n\\n\\n\\n\\n                            </div>\\n\\n                            <div class=\\\"col-md-12  account-btn-container-base\\\">\\n                                <div class=\\\"col-md-12  account-btn-container\\\">\\n                                    <button type=\\\"submit\\\" [disabled]=\\\"!registerForm.valid\\\" class=\\\"themebtn\\\">SUBMIT</button>\\n                                </div>\\n                                <div *ngIf=\\\"edittype\\\" class=\\\"col-md-12  account-btn-container\\\">\\n                                    <!-- <a href=\\\"#\\\" class=\\\"themebtn1\\\">DEACTIVATE THE ACCOUNT</a> -->\\n                                </div>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","module.exports = \".formtit {\\n  float: left;\\n  width: 100%;\\n  margin: -15px 0 5px 0; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { ShareService } from '../../../providers/share.service';\nimport { constants } from '../../../constants';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n@Component({\n  selector: 'app-addcompany',\n  templateUrl: './addcompany.component.html',\n  styleUrls: ['./addcompany.component.scss']\n})\nexport class AddcompanyComponent implements OnInit {\n  edittype: boolean;\n  register: any = {};\n  userId: any;\n  passwordvisible: boolean;\n  filetoremove: any = [];\n  previewImage: any;\n  fileReaded: any;\n  categorylist: any;\n  uploadcsv: any;\n  uploadedfilename: any;\n  \n  constructor(\n    private route: ActivatedRoute,\n    private shareService: ShareService,\n    private router: Router,\n    private messageService: MessageService) {\n    this.categorylist = [\n      { label: 'Select Category', value: null },\n      { label: 'Banking', value: 'banking' },\n      { label: 'Telecom', value: 'telecom' },\n      { label: 'Finance', value: 'finance' },\n      { label: 'other', value: 'other' }\n    ];\n  }\n\n  ngOnInit() {\n\n    this.uploadcsv = constants.uploadcsv;\n\n  }\n\n\n  onSubmitForm(formvalue) {\n    console.log(formvalue)\n    // this.userId ? this.update(formvalue) : this.save(formvalue)\n\n    let payload = {\n      company: this.register.name,\n      name: this.register.ivrName,\n      tree:  JSON.parse(this.register.cuservejson),\n      populateCheckpoints: true\n    }\n\n\n    this.shareService.postData(constants.addIvr, payload).subscribe((res) => {\n      this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Cuserve Json Uploaded sucessfully' });\n      this.save(formvalue);\n    }, (err) => {\n      this.messageService.add({ severity: 'error', summary: 'Error Message', detail: err.message });\n    });\n\n\n  }\n\n  save(formvalue) {\n    this.shareService.postData(constants.addcompany, this.register).subscribe((res) => {\n      this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Company created sucessfully' });\n      this.router.navigate(['/admin/android']);\n      formvalue.reset();\n      this.removeUnusedFiles();\n\n    }, (err) => {\n      this.messageService.add({ severity: 'error', summary: 'Error Message', detail: err.message });\n    });\n  }\n\n  update(formvalue) {\n    this.shareService.update(constants.getcustomer + this.userId, this.register).subscribe((res) => {\n      this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'user uptated sucessfully' });\n      this.removeUnusedFiles();\n    }, (err) => {\n      this.messageService.add({ severity: 'error', summary: 'Error Message', detail: err.message });\n    });\n  }\n\n\n\n  onUpload(event, fieldname) {\n    console.log(event);\n\n    this.uploadedfilename = event.files[0].name\n    const response = JSON.parse(event.xhr.response);\n    this.register.cuservejson = response.file;\n    // if (this.register[fieldname] === '' || this.register[fieldname] === undefined) {\n    //   this.register[fieldname] = constants.companyImagepath + response.file[0].filename;\n    // } else {\n    //   this.filetoremove = [...this.filetoremove, constants.companyImagepath + this.register[fieldname]];\n    //   this.register[fieldname] = constants.companyImagepath + response.file[0].filename;\n    // }\n  }\n\n  select(event){\nconsole.log(event)\n  }\n  viewImage(image) {\n    this.previewImage = this.register.companylogo\n  }\n\n  removeImage(id, fieldname) {\n    this.register[fieldname] = '';\n    this.filetoremove = [...this.filetoremove, constants.companyImagepath + id];\n  }\n\n  removeUnusedFiles() {\n    this.shareService.postData(constants.deletefile, this.filetoremove).subscribe(result => {\n      console.log(result['message']);\n      this.filetoremove = [];\n    });\n  }\n \n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { CompanyRouting } from './companylist.routing'; \nimport { CompanylistComponent } from './companylist/companylist.component';\nimport { ShareModule } from '../../share/share.module';\nimport { AddcompanyComponent } from './addcompany/addcompany.component'; \n\n@NgModule({\n  imports: [\n    CommonModule,\n    CompanyRouting,\n    ShareModule, \n  ],\n  declarations: [ \n    CompanylistComponent, AddcompanyComponent\n    \n  ]\n})\nexport class CompanylistModule { }\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ModuleWithProviders } from '@angular/core';\nimport { CompanylistComponent } from './companylist/companylist.component';\nimport { AddcompanyComponent } from './addcompany/addcompany.component'; \n\n\nconst routes: Routes = [\n  {\n    path: '',    \n    children: [\n      {\n        path: '',\n        component: CompanylistComponent\n      },\n      {\n        path: 'addcompany',\n        component: AddcompanyComponent\n      }\n     \n    ]\n  }\n\n];\n\n\n// path: ' ',\n// component: LandingComponent,  \n\n\n\n\n\n\n\nexport const CompanyRouting: ModuleWithProviders = RouterModule.forChild(routes);\n","module.exports = \"<div class=\\\"col-md-12 col-sm-12 col-xs-12 col-lg-12 billhist-base ivr-base nopadd\\\">\\n    <div class=\\\"col-md-12 col-sm-12 col-xs-12 col-lg-12 billhist-generatebill text-right nopadd\\\">\\n        <h2 class=\\\"main-title\\\">Android Lists</h2>\\n    </div>\\n    <div class=\\\"col-md-12 col-sm-12 col-xs-12 col-lg-12 searchbar-container nopadd\\\">\\n        <input type=\\\"text\\\" (input)=\\\"dt.filterGlobal($event.target.value, 'contains')\\\" class=\\\"searchbar\\\" placeholder=\\\"Search\\\">\\n\\n        <div class=\\\"col-md-12 col-sm-12 col-xs-12 col-lg-12 billhist-generatebill text-right nopadd\\\">\\n            <a routerLink=\\\"/admin/android/addcompany\\\" class=\\\"themebtn1\\\"><span class=\\\"plus-icon-bill\\\">+</span>ADD COMPANY</a>\\n        </div>\\n        <div class=\\\"col-md-12 col-sm-12 col-xs-12 col-lg-12 billhist-generatebill text-right nopadd\\\">\\n\\n            <div class=\\\"theme-table\\\">\\n\\n                <p-table #dt class=\\\"table table-striped\\\" [columns]=\\\"cols\\\" [value]=\\\"datasource\\\" [paginator]=\\\"true\\\" [rows]=\\\"10\\\" [totalRecords]=\\\"totalRecords\\\">\\n                    <ng-template pTemplate=\\\"header\\\" let-columns>\\n                        <tr>\\n                            <th *ngFor=\\\"let col of columns\\\" [pSortableColumn]=\\\"col.field\\\">\\n                                {{col.header}}\\n                            </th>\\n                            <th style=\\\"width: 95px\\\">\\n                                Action\\n                            </th>\\n                        </tr>\\n                    </ng-template>\\n                    <ng-template pTemplate=\\\"body\\\" let-rowData let-columns=\\\"columns\\\">\\n                        <tr>\\n                            <td>{{rowData.displayName}}</td>\\n                            <td>{{rowData.ivrName }}</td>\\n                            <td>{{rowData.baseKeyCode}}</td>\\n                            <td>{{rowData.customerCare}}</td>\\n                            <td><img src=\\\"{{rowData.logoUrl}}\\\" width=\\\"50\\\" /></td>\\n                            <!--  <td>{{rowData.tagline}}</td>-->\\n                            <td>{{rowData.category}}</td>\\n                            <td>\\n                                <p> <a (click)=\\\"showjson_ivr(rowData.name, rowData.ivrName)\\\" class=\\\"custom-red\\\">View Json</a></p>\\n                            </td>\\n                        </tr>\\n                    </ng-template>\\n                </p-table>\\n\\n\\n            </div>\\n        </div>\\n    </div>\\n\\n</div>\\n<div *ngIf=\\\"jsondata\\\" class=\\\"login-modal modal fade \\\" id=\\\"myModal\\\">\\n    <i class=\\\"mdi mdi-close\\\" (click)=\\\"closemodal()\\\"></i>\\n    <div class=\\\"modal-dialog\\\" role=\\\"document\\\">\\n        <div class=\\\"modal-content col-md-12 nopadd\\\">\\n            <div style=\\\"padding: 30px\\\" class=\\\"modal-body col-md-12  \\\">\\n\\n                <!-- <ngx-json-viewer [json]=\\\"jsondata\\\"></ngx-json-viewer>-->\\n                <pre>{{jsondata | json}}</pre>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n<app-loader *ngIf=\\\"!datasource\\\"></app-loader>\"","module.exports = \".themebtn1 {\\n  margin: 25px 0 -20px 0; }\\n\\n.main-title {\\n  margin-bottom: 0; }\\n\\n.modal {\\n  opacity: 1; }\\n\\n.login-modal .modal-dialog {\\n  width: 1030px; }\\n\\n.login-modal .modal-dialog td {\\n    overflow: hidden;\\n    text-overflow: ellipsis; }\\n\\n.modal-body {\\n  position: relative;\\n  padding: 15px;\\n  min-height: 300px; }\\n\\n.mdi.mdi-close {\\n  float: right;\\n  color: #fff;\\n  font-size: 50px;\\n  margin: 0 20px 0 0;\\n  position: fixed;\\n  right: 20px; }\\n\\npre {\\n  background: none !important;\\n  border: none !important; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ShareService } from '../../../providers';\nimport { constants } from '../../../constants';\nimport { ConfirmationService, MessageService } from 'primeng/api';\n@Component({\n  selector: 'app-companylist',\n  templateUrl: './companylist.component.html',\n  styleUrls: ['./companylist.component.scss']\n})\nexport class CompanylistComponent  implements OnInit {\n  datasource: any[];\n  json_array:any[];\n  totalRecords: number;\n  cols: any[];\n  dt: any;\n  activepagination: number = 0;\n  jsondata: any;\n  constructor(private http: HttpClient,\n    private shareService: ShareService,\n    private confirmationService: ConfirmationService,\n    private messageService: MessageService) { }\n\n  ngOnInit() {\n\n    this.shareService.getData(constants.android_get_company).subscribe(res => {\n      this.datasource = res['info']; \n      console\n       this.totalRecords = this.datasource.length;\n    });\n\n    this.cols = [\n      { field: 'displayName', header: 'Company Name' },\n      { field: 'ivrName', header: 'IVR Name' },\n      { field: 'baseKeyCode', header: 'Base Key Code' },\n      { field: 'customerCare', header: 'Customer Care' },\n      { field: 'logoUrl', header: 'Logo' },\n      /*{ field: 'tagline', header: 'Tag Line' },*/\n      { field: 'category', header: 'category' },\n     \n     \n    ];\n    sessionStorage.getItem('activeivrpagination') ? this.activepagination =  JSON.parse(sessionStorage.getItem('activeivrpagination')): null;\n\n  }\n\n  \n  showjson_ivr(company,name){\n    this.shareService.getData(constants.android_get_ivr+\"?company=\"+company+\"&name=\"+name).subscribe(res => {\n      this.json_array = res['info']; \n      console.log(this.json_array);\n      this.jsondata = res['info'];\n      document.body.classList.add(\"modal-open\");\n    });\n\n  }\n  closemodal(){\n    this.jsondata = null;\n    document.body.classList.remove(\"modal-open\");\n  }\n  \n  pagechange(ev){ \n    sessionStorage.setItem('activeivrpagination' , ev.first)\n  }\n\n\n\n  uploadtocuserve(data){\n    let payload = {\n      name: data.companyname,  \n      ivrName: data.companyname + '-ivr-1',\n      baseKeyCode: data.companyivrnumber,\n      displayName: data.companyname.replace(/\\s+/g, '-').toLowerCase(),\n      logoUrl: data.companylogo,\n      tagline: '',\n      category: data.category,\n      customerCare: data.companyivrnumber    \n    }\n    this.shareService.postData( constants.addcompany , payload).subscribe(res => { \n      this.messageService.add({ severity: 'success', summary: 'Success Message', detail: 'Company detail uploaded sucessfully' });\n    }, (err) => {\n      this.messageService.add({ severity: 'error', summary: 'Error Message', detail: err.message });\n    });\n  }\n\n}\n\n\n"],"sourceRoot":""}